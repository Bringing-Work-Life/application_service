/*
Deployment script for Database1

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Database1"
:setvar DefaultFilePrefix "Database1"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL16.SQL2022\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL16.SQL2022\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Altering Procedure [dbo].[spCreateUser]...';


GO
ALTER PROCEDURE [dbo].[spCreateUser]
	@FirstName NVARCHAR(30),
	@MiddleName NVARCHAR(30),
	@LastName NVARCHAR(30),
	@DOBDate NVARCHAR(20),        
    @DOBTime NVARCHAR(20),   
	@Phone NVARCHAR(20),
	@Street1 NVARCHAR(50),
	@Street2 NVARCHAR(50),
	@City NVARCHAR(30),
	@State NVARCHAR(30),
	@Pincode NVARCHAR(20),
	@UserName NVARCHAR(100),
	@Password NVARCHAR(50)
AS
BEGIN
  -- Validate mandatory fields
    IF ISNULL(@FirstName, '') = '' 
       OR ISNULL(@LastName, '') = ''
       OR ISNULL(@Street1, '') = ''
       OR ISNULL(@City, '') = ''
       OR ISNULL(@State, '') = ''
       OR ISNULL(@UserName, '') = ''
       OR ISNULL(@Password, '') = ''
    BEGIN
        RAISERROR('One or more mandatory fields are missing or empty.', 16, 1);
        RETURN;
    END
    -- Check for duplicate UserName
    IF EXISTS (SELECT 1 FROM [User] WHERE UserName = @UserName)
    BEGIN
        RAISERROR('UserName already exists.', 16, 1);
        RETURN -2;  -- Custom return value for duplicate UserName
    END
    INSERT INTO [User] (FirstName, MiddleName, LastName, DOBDate, DOBTime, Phone, Street1, Street2, City, State, Pincode, UserName, Password)
    VALUES (@FirstName,
	@MiddleName,
	@LastName,
	@DOBDate,        
    @DOBTime,   
	@Phone,
	@Street1,
	@Street2,
	@City,
	@State,
	@Pincode,
	@UserName,
	@Password);
    -- Get the last inserted ID
    DECLARE @NewUserID INT = SCOPE_IDENTITY();

    -- Return the newly inserted row
    SELECT * FROM [User] WHERE Id = @NewUserID;
END
GO
PRINT N'Update complete.';


GO
